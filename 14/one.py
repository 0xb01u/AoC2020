# --- Advent of code 2020: Day 14 ---

# (File automatically generated by aocTool, developed by B0lu, 2020.)

init = open("input.txt").readlines()
mem = {}
maskOR = 0
maskAND = 0

for ins in init:
	#print(ins)
	if "mem" in ins:
		exec(ins)
		#print(bin(maskOR), bin(maskAND))
		mem[int(ins.split("[")[1].split("]")[0])] &= maskAND
		mem[int(ins.split("[")[1].split("]")[0])] |= maskOR
	else:
		val = ins.split(" = ")[1][:-1]
		maskOR = 0
		maskAND = 0
		OR = [int(e == "1") for e in val]
		for bit in OR:
			maskOR = (maskOR << 1) | bit
		AND = [int(not e == "0") for e in val]
		for bit in AND:
			maskAND = (maskAND << 1) | bit

print(f"Sum of all values: {sum(mem.values())}")
assert sum(mem.values()) == 6631883285184
