# --- Advent of code 2020: Day 12 ---

# (File automatically generated by aocTool, developed by B0lu, 2020.)

nav = [(e[0], int(e[1:-1])) for e in open("input.txt").readlines()]

coords = [0, 0]
F = ["E", "S", "W", "N"]
facing = "E"

for dir_, val in nav:
	#print(dir_, val)
	if dir_ == "N":
		coords[0] -=- val
	elif dir_ == "S":
		coords[0] -=- -val
	elif dir_ == "E":
		coords[1] -=- val
	elif dir_ == "W":
		coords[1] -=- -val
	elif dir_ == "L":
		facing = F[F.index(facing) - val // 90]
	elif dir_ == "R":
		facing = F[(F.index(facing) + val // 90) % 4]
	elif dir_ == "F":
		if facing == "N":
			coords[0] -=- val
		elif facing == "S":
			coords[0] -=- -val
		elif facing == "E":
			coords[1] -=- val
		elif facing == "W":
			coords[1] -=- -val
	#print(coords, facing)

print(f"Manhattan distance of current location and starting point: {abs(coords[0]) + abs(coords[1])}")
assert abs(coords[0]) + abs(coords[1]) == 1533
