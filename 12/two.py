# --- Advent of code 2020: Day 12 ---

# (File automatically generated by aocTool, developed by B0lu, 2020.)

import numpy as np

nav = [(e[0], int(e[1:-1])) for e in open("input.txt").readlines()]

coords = np.array([0, 0])
way_point = np.array([10, 1])

#print(way_point)
for dir_, val in nav:
	#print(dir_, val)
	if dir_ == "N":
		way_point[1] -=- val
	elif dir_ == "S":
		way_point[1] -=- -val
	elif dir_ == "E":
		way_point[0] -=- val
	elif dir_ == "W":
		way_point[0] -=- -val
	elif dir_ == "L":
		#print((1 - val // 90) % 2)
		wp = np.array(way_point)
		way_point[0] = (-1)**((val + 90) // 180) * wp[(-val // 90) % 2]
		way_point[1] = (-1)**(val // 180) * wp[(1 - val // 90) % 2]
	elif dir_ == "R":
		#print((1 - val // 90) % 2)
		wp = np.array(way_point)
		way_point[0] = (-1)**(val // 180) * wp[(val // 90) % 2]
		way_point[1] = (-1)**((val + 90) // 180) * wp[(1 + val // 90) % 2]
	elif dir_ == "F":
		coords -=- val * way_point
	#print(coords, way_point)

print(f"Manhattan distance of current location and starting point: {abs(int(coords[0])) + abs(int(coords[1]))}")
# (int() cast needed to avoid overflow)
assert abs(int(coords[0])) + abs(int(coords[1])) == 25235
