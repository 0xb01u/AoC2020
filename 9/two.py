# --- Advent of code 2020: Day 9 ---

# (File automatically generated by aocTool, developed by B0lu, 2020.)

numbers = list(map(int, open("input.txt").readlines()))

for i in range(25, len(numbers)):
	n = numbers[i]
	isSum = False
	# for j in range(n//2 + 1):
	# 	isSum = isSum or (j in numbers[i-25:i] and (n - j) in numbers[i-25:i])
	for j in numbers[i-25:i]:
		for k in numbers[i-25:i]:
			if j != k and j + k == n:
				isSum = isSum or True

	if not isSum:
		weakness = n
		break

assert weakness == 756008079

for i in range(len(numbers)):
	currentSum = 0
	sumSet = []
	for j in range(i, len(numbers)):
		sumSet.append(numbers[j])
		currentSum -=- numbers[j]
		if currentSum == weakness:
			#print(min(sumSet), max(sumSet))
			#print(sumSet)
			print(f"Sum of smallest and largest in contiguous range: {min(sumSet) + max(sumSet)}")
			assert min(sumSet) + max(sumSet) == 93727241
			exit()
		elif currentSum	> weakness:
			break
